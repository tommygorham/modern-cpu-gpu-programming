How to run the programs and this directory for reproduciblility of Code Base.

Note: If your compiler is gcc 10 or later use: -std=c++20 or -std=c++17
      Otherwise, if its older you can use -std=c++2a I believe 

SERIAL PROGRAMS 

### The program below is a serial matrix-vector dot product
    Performance is measured with the chrono library ###
    serial.cpp: g++ -Wall -std=c++20 -o runserial serial.cpp


### The program below is a serial matrix-vector dot product, identical to serial.cpp.
    However, this time we measure performance with openmp ###

    serial2.cpp: g++ -Wall -std=c++20 -o runserial2 serial2.cpp -fopenmp

KOKKOS PROGRAMS

### Start with kokkosmvdot.cpp, then see kokkos-threadteams.cpp 
### I have commented almost everything in kokkosmvdot.cpp program and tried to 
### keep it as simple as possible, by showing multiple ways to do things and only
### exploiting flat parallelism as an introduction. kokkos-threadteams.cpp is currently
### the cleaner file as i removed my functions when demonstrating hierarchcal parallelism
### in this file. I plan to add more test cases to this one soon. 

### Both kokkosmv.cpp and kokkos-threadteams.cpp are single-source implementation of 
### of matrix-vector multiplication using the dot product. 
### Both files are able is to compile and run on the CPU (tested with Serial or OpenMP 4.5) 
### or the GPU(Tested with CUDA 11.3)         


### I used CMake, OpenMP 4.5, and Cuda 11.3 to create and test these.  
### Depending on your build/backend you may be able to just run cmake .. in <source dir>  
### However, I've included instructions for all scenarios if you have Kokkos installed. 

Serial CPU   
    kokkosmvdot.cpp:         $ <source dir> mkdir build && cd build 
    kokkos-threadteams.cpp   $ cmake .. 
                             -DCMAKE_INSTALL_PREFIX=<path-to-your-kokkos-install>
                             -DCMAKE_CXX_COMPILER=<path-to-g++> 


OpenMP for on node parallelism on the CPU
    kokkosmvdot.cpp:         $ <source dir> mkdir build && cd build 
                             $ cmake .. 
                             -DCMAKE_INSTALL_PREFIX=<path-to-your-kokkos-install>
                             -DCMAKE_CXX_COMPILER=<path-to-g++> 
                             -DKokkos_ENABLE_OPENMP=ON 

OpenMP + CUDA GPU(s) 
    kokkosmvdot.cpp:         $ <source dir> mkdir build && cd build 
                             $ cmake .. 
                             -DCMAKE_INSTALL_PREFIX=<path-to-your-kokkos-install>
                             -DCMAKE_CXX_COMPILER=<path-to-kokkos/bin/nvcc_wrapper> 
                             -DKokkos_ENABLE_OPENMP=ON 
                             -DKokkos_ENABLE_CUDA=ON
                     
                             ###Optional but advised 
                             -DKokkos_ARCH_<YOUR_GPU_ARCHITECTURE>=ON 
                             -DKokkos_ENABLE_CUDA_LAMBDA=ON
                             -DKokkos_ENABLE_CUDA_UVM=ON
                             -DKokkos_ENABLE_CUDA_RELOCATABLE_DEVICE_CODE=ON 

  



